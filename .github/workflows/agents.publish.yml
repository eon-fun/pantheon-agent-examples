name: CI & Publish (Poetry, Multi-agent, Bash loop)

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Loop over all agents
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
          HARBOR_URL: ${{ secrets.HARBOR_URL }}
          HARBOR_PROJECT: ${{ secrets.HARBOR_PROJECT }}
          HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
        run: |
          set -e
          for agent_dir in agents/*/ ; do
            if [ ! -f "$agent_dir/pyproject.toml" ]; then
              echo "Skipping $agent_dir (no pyproject.toml found)"
              continue
            fi
            echo "===== Processing $agent_dir ====="
            cd "$agent_dir"

            echo "Installing dependencies with Poetry..."
            poetry install --no-interaction --no-root && echo "Dependencies installed!"

            echo "Running tests..."
            poetry run pytest && echo "Tests passed!"

            echo "Building package (wheel & sdist)..."
            poetry build && echo "Package built!"

            # Only publish on v*.*.* tag
            if [[ "${GITHUB_REF}" =~ refs/tags/v.* ]]; then
              echo "Publishing to PyPI..."
              poetry publish --no-interaction --build && echo "Published to PyPI!"
            else
              echo "Not a version tag; skipping publish to PyPI."
            fi

            # Docker build/push if Dockerfile exists and on tag
            if [ -f Dockerfile ] && [[ "${GITHUB_REF}" =~ refs/tags/v.* ]]; then
              echo "Logging in to Harbor Docker registry..."
              echo "${HARBOR_PASSWORD}" | docker login "${HARBOR_URL}" -u "${HARBOR_USERNAME}" --password-stdin && echo "Logged in to Harbor!"

              IMAGE_TAG="${GITHUB_REF_NAME}"
              IMAGE_REPO="${HARBOR_URL}/${HARBOR_PROJECT}/$(basename $agent_dir)"

              echo "Building Docker image..."
              docker build -t "${IMAGE_REPO}:${IMAGE_TAG}" . && echo "Docker image built!"

              echo "Pushing Docker image to Harbor..."
              docker push "${IMAGE_REPO}:${IMAGE_TAG}" && echo "Docker image pushed to Harbor!"
            else
              if [ ! -f Dockerfile ]; then
                echo "No Dockerfile found in $agent_dir, skipping Docker build/push."
              else
                echo "Not a version tag; skipping Docker build/push."
              fi
            fi
            cd -  # back to repo root
            echo "===== Finished processing $agent_dir ====="
          done
