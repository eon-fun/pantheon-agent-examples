name: Python CI - Pre-commit and Tests

on:
  push:
    branches-ignore:
      - "main"
      - "staging"
      - "hotfix/**"
      - "release/**"
    paths:
      - "agents/**"
      - ".pre-commit-config.yaml"
      - "pyproject.toml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "agents/**"
      - ".pre-commit-config.yaml"
      - "pyproject.toml"

jobs:
  pre-commit:
    name: Run Pre-commit checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: pre-commit
    if: always() && (needs.pre-commit.result == 'success')

    strategy:
      matrix:
        agent: [
          "ai_apy_pool_agent",
          "base-agent",
          "example-agent",
          "persona-agent",
          "creativity-agent",
          "kol-agent"
        ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Check if agent directory exists
        run: |
          if [ ! -d "agents/${{ matrix.agent }}" ]; then
            echo "Agent directory agents/${{ matrix.agent }} does not exist"
            exit 0
          fi

      - name: Install dependencies for ${{ matrix.agent }}
        working-directory: agents/${{ matrix.agent }}
        run: |
          if [ -f "pyproject.toml" ]; then
            poetry install --with dev
          else
            echo "No pyproject.toml found in agents/${{ matrix.agent }}"
          fi

      - name: Run tests for ${{ matrix.agent }}
        working-directory: agents/${{ matrix.agent }}
        run: |
          if [ -f "Makefile" ]; then
            poetry run make test
          elif [ -d "tests" ]; then
            echo "Running tests from tests/ directory for ${{ matrix.agent }}"
            poetry run pytest tests/ --cov=. --cov-report=term-missing --cov-report=xml:coverage.xml --cov-fail-under=80 -v
          else
            echo "No tests found for ${{ matrix.agent }}"
          fi

      - name: Upload coverage report for ${{ matrix.agent }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.agent }}
          path: agents/${{ matrix.agent }}/coverage.xml
          retention-days: 7
