from telethon import functions
from telethon.errors import SessionPasswordNeededError, PhoneCodeInvalidError, PhoneNumberUnoccupiedError
from telethon.tl.types import PeerUser, PeerChannel, PeerChat, InputPeerEmpty

from config import telethon_client as client


async def get_read_messages_data(client):
    try:
        dialogs = await client(functions.messages.GetDialogsRequest(
            offset_date=None,
            offset_id=0,
            offset_peer=InputPeerEmpty(),
            limit=100,
            hash=0
        ))

        return [
            {
                "chat_id": (
                    d.peer.user_id if isinstance(d.peer, PeerUser)
                    else d.peer.channel_id if isinstance(d.peer, PeerChannel)
                    else d.peer.chat_id if isinstance(d.peer, PeerChat)
                    else None
                ),
                "max_id": d.read_inbox_max_id
            }
            for d in dialogs.dialogs
        ]
    except Exception as e:
        print(f"‚ùå Error fetching read messages: {e}")
        return []


async def telethon_auth():
    print("üöÄ –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ Telethon")
    try:
        await client.connect()
        if not await client.is_user_authorized():
            print("‚è≥ –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            phone = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ").strip()
            try:
                await client.send_code_request(phone)
                code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS: ").strip()
                try:
                    await client.sign_in(phone=phone, code=code)
                except SessionPasswordNeededError:
                    print("üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–ª–∞—á–Ω—ã–π –ø–∞—Ä–æ–ª—å (2FA)")
                    password = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ–±–ª–∞—á–Ω—ã–π –ø–∞—Ä–æ–ª—å: ").strip()
                    await client.sign_in(password=password)
                    print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –æ–±–ª–∞—á–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º!")
            except PhoneCodeInvalidError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            except PhoneNumberUnoccupiedError:
                print("‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ Telegram.")
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ!")
        await client.run_until_disconnected()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    finally:
        await client.disconnect()
