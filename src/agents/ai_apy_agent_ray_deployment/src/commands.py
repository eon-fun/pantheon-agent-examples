from aiogram import Dispatcher, Bot
from aiogram.types import Message
from aiogram.filters import Command

from infrastructure.configs.config import get_settings
from simple_ai_agents.ai_apy_agent_ray_deployment.entrypoint import agent

settings = get_settings()


bot = Bot(token=settings.TELEGRAM_BOT_TOKEN_2)
dp = Dispatcher()


@dp.message(Command("start"))
async def cmd_start(message: Message):
    welcome_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–π –ø—É–ª –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–≤–æ–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤.

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
‚Ä¢ /find_pools <–∞–¥—Ä–µ—Å_—Ç–æ–∫–µ–Ω–∞> - –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –ø—É–ª—ã –¥–ª—è —Ç–æ–∫–µ–Ω–∞
‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

*–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*
`/find_pools 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48`
"""
    await message.answer(welcome_text, parse_mode="Markdown")


@dp.message(Command("help"))
async def cmd_help(message: Message):
    await cmd_start(message)


@dp.message(Command("find_pools"))
async def find_pools(message: Message):
    print(f"\nü§ñ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –ø—É–ª–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username}")
    try:
        token_address = message.text.split()[1]
        print(f"üìù –ü–æ–ª—É—á–µ–Ω –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞: {token_address}")
    except IndexError:
        print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞")
        await message.answer(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞.\n–ü—Ä–∏–º–µ—Ä: `/find_pools 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48`",
            parse_mode="Markdown")
        return
    status_message = await message.answer("üîç –ò—â—É –ª—É—á—à–∏–µ –ø—É–ª—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")

    try:
        best_pool = await agent.find_best_pool(token_address)

        recommendation = agent.format_investment_recommendation(best_pool)
        await status_message.edit_text(recommendation, parse_mode="Markdown")

    except Exception as e:
        error_message = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—É–ª–æ–≤: {str(e)}"
        await status_message.edit_text(error_message)